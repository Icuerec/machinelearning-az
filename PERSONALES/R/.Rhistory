library("dplyr", lib.loc="~/R/win-library/4.0")
library(readr)
Data <- read_csv("Unidad1/Data.csv")
View(Data)
df = read.csv("Unidad1/Data.csv")
View(Data)
View(df)
View(Data)
View(Data)
df = read.csv("Unidad1/Data.csv")
df$Age = ifelse(is.na(df$Age),
ave(df$Age,FUN = function(x) mean(x,na.rm = TRUE)),
df$Age)
View(df)
df$Salary = ifelse(is.na(df$Salary),
ave(df$Salary,FUN = function(x) mean(x,na.rm = TRUE)),
df$Salary)
View(df)
df$Purchased = factor(df$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
View(df)
df$Country = factor(df$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
View(df)
View(df)
dfSalary = read.csv('Unidad2_Regresion/RLS/Salary_Data.csv')
View(dfSalary)
View(dfSalary)
testing_set = subset(df,split == FALSE)
library(caTools)
set.seed(123)
split = sample.split(dfSalary$Salary,SplitRatio = 2/3)
training_set = subset(df,split==TRUE)
testing_set = subset(df,split == FALSE)
testing_set = subset(dfSalary,split == FALSE)
training_set = subset(dfSalary,split==TRUE)
testing_set = subset(dfSalary,split == FALSE)
testing_set = subset(dfSalary,split == FALSE)
testing_set = subset(dfSalary,split == FALSE)
#Regresión lineal simple
dfSalary = read.csv('Unidad2_Regresion/RLS/Salary_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dfSalary$Salary,SplitRatio = 2/3)
training_set = subset(dfSalary,split==TRUE)
testing_set = subset(dfSalary,split == FALSE)
?lm
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
summary regressor
summary(regressor)
y_pred = predict(regressor, newdata = testing_set)
y_pred
View(training_set)
View(testing_set)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
ggpl2()+
geom_point(aes(x = training_set$YearsExperience, y training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict((regressor, newdata = training_set))),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.') +
ylab('Sueldo')
dfSalary = read.csv('Unidad2_Regresion/RLS/Salary_Data.csv')
#Creamos el conjunto de test y el conjunto de entrenamiento
library(caTools)
set.seed(123)
split = sample.split(dfSalary$Salary,SplitRatio = 2/3)
training_set = subset(dfSalary,split==TRUE)
testing_set = subset(dfSalary,split == FALSE)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#Predecir resultados con el set de test (Se tienen que llamar igual las columnas!!!)
y_pred = predict(regressor, newdata = testing_set)
ggpl2()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict((regressor, newdata = training_set))),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.') +
ylab('Sueldo')
ggpl2()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.') +
ylab('Sueldo')
ggplot2()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.') +
ylab('Sueldo')
library(ggplot2)
ggplot2()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.') +
ylab('Sueldo')
ggplot2() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.') +
ylab('Sueldo')
ggplot2() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.') +
ylab('Sueldo')
library(ggplot2)
#Regresión lineal simple
#Cargamos el archivo
dfSalary = read.csv('Unidad2_Regresion/RLS/Salary_Data.csv')
#Creamos el conjunto de test y el conjunto de entrenamiento
library(caTools)
set.seed(123)
split = sample.split(dfSalary$Salary,SplitRatio = 2/3)
training_set = subset(dfSalary,split==TRUE)
testing_set = subset(dfSalary,split == FALSE)
#Ajustar el modelo de regresión lineal simple con el training_set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#Predecir resultados con el set de test (Se tienen que llamar igual las columnas!!!)
y_pred = predict(regressor, newdata = testing_set)
#Visualizar datos y predicción
install.packages('ggplot2')
library(ggplot2)
ggplot2() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.')
install.packages("ggplot2")
library(ggplot2)
ggplot2() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.') +
ylab('Sueldo')
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
# install.packages("devtools")
devtools::install_github("tidyverse/reprex")
R.version
#Regresión lineal simple
#Cargamos el archivo
dfSalary = read.csv('Unidad2_Regresion/RLS/Salary_Data.csv')
#Creamos el conjunto de test y el conjunto de entrenamiento
library(caTools)
set.seed(123)
split = sample.split(dfSalary$Salary,SplitRatio = 2/3)
training_set = subset(dfSalary,split==TRUE)
testing_set = subset(dfSalary,split == FALSE)
#Ajustar el modelo de regresión lineal simple con el training_set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#Predecir resultados con el set de test (Se tienen que llamar igual las columnas!!!)
y_pred = predict(regressor, newdata = testing_set)
#Visualizar datos y predicción
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'orange') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Sueldo vs Años exp. (Conjunto de Entrenamiento)') +
xlab('Años exp.') +
ylab('Sueldo')
#Cargamos el archivo
df = read.csv('Unidad2_Regresion/RLM/50_Startups.csv')
View(df)
View(df)
#Codificar variables categóricas
df$Country = factor(df$State,
levels = c('Florida','New York','California'),
labels = c(1,2,3))
View(df)
#Regresión lineal múltiple
#Cargamos el archivo
df = read.csv('Unidad2_Regresion/RLM/50_Startups.csv')
#Codificar variables categóricas
df$State = factor(df$State,
levels = c('Florida','New York','California'),
labels = c(1,2,3))
View(df)
testing_set = subset(df,split == FALSE)
#Dividir el conjunto en entrenamiento y test
library(caTools)
split = sample.split(df$Profit,SplitRatio = 0.8)
training_set = subset(df,split==TRUE)
testing_set = subset(df,split == FALSE)
View(testing_set)
View(training_set)
View(testing_set)
View(training_set)
View(testing_set)
regression = lm(formula = Profit ~ .,
data = training_set)
View(regression)
View(regression)
summary regression
summary(regression)
y_pred = predict(regression,testing_set)
y_pred
View(testing_set)
install.packages("https://cran.r-project.org/src/contrib/Archive/ElemStatLearn/ElemStatLearn_2015.6.26.2.tar.gz",repos=NULL, type="source")
